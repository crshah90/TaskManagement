<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 12.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="12.0">
 <Targets>
  <Target Name="E:\Calendar application v2.0\chat-server\bin\Debug\ChatServer.exe">
   <Modules>
    <Module Name="chatserver.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'ChatServer.exe' with a strong name key.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="ChatServer">
       <Types>
        <Type Name="ChatServer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="Breaking">
           <Issue Name="UIType" Certainty="75" Level="Warning">'ChatServer' is coupled with 82 different (non-IComponent) types from 21 different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above 95 indicates poor maintainability, a class coupling between 95 and 80 indicates moderate maintainability, and a class coupling below 80 indicates good maintainability.</Issue>
          </Message>
          <Message TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">The type name 'ChatServer' conflicts in whole or in part with the namespace name 'ChatServer'. Change either name to eliminate the conflict.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="61">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ChatServer()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="61">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ChatServer()' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="25">Be sure to set the DataTable Locale property wherever 'ChatServer.ChatServer(string)' creates an instance of that type.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnNextMonth_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="632">Method 'ChatServer.btnNextMonth_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon, MessageBoxDefaultButton, MessageBoxOptions)'. Retrieve the following string(s) from a resource table instead: "Error1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="632">Method 'ChatServer.btnNextMonth_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon, MessageBoxDefaultButton, MessageBoxOptions)'. Retrieve the following string(s) from a resource table instead: "Error".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="630">Modify 'ChatServer.btnNextMonth_Click(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ex" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="630">'ChatServer.btnNextMonth_Click(object, EventArgs)' declares a variable, 'ex', of type 'Exception', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="617">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnNextMonth_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="617">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnNextMonth_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="618">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnNextMonth_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="618">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnNextMonth_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="618">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnNextMonth_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int32)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="621">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnNextMonth_Click(object, EventArgs)' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="625">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnNextMonth_Click(object, EventArgs)' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnPreviousMonth_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="605">Method 'ChatServer.btnPreviousMonth_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon, MessageBoxDefaultButton, MessageBoxOptions)'. Retrieve the following string(s) from a resource table instead: "Error1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="605">Method 'ChatServer.btnPreviousMonth_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon, MessageBoxDefaultButton, MessageBoxOptions)'. Retrieve the following string(s) from a resource table instead: "Error".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Boolean)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="588">Method 'ChatServer.btnPreviousMonth_Click(object, EventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon, MessageBoxDefaultButton, MessageBoxOptions, bool)'. Retrieve the following string(s) from a resource table instead: "Information".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="588">Method 'ChatServer.btnPreviousMonth_Click(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon, MessageBoxDefaultButton, MessageBoxOptions, bool)'. Retrieve the following string(s) from a resource table instead: "Year Cannot Be Less Than 1990".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="603">Modify 'ChatServer.btnPreviousMonth_Click(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="ex" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="603">'ChatServer.btnPreviousMonth_Click(object, EventArgs)' declares a variable, 'ex', of type 'Exception', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="583">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnPreviousMonth_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="583">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnPreviousMonth_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="584">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnPreviousMonth_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="584">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnPreviousMonth_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="584">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnPreviousMonth_Click(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int32)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="593">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnPreviousMonth_Click(object, EventArgs)' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="597">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnPreviousMonth_Click(object, EventArgs)' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnStart_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="752">In method 'ChatServer.btnStart_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'frm' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="751">Method 'ChatServer.btnStart_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Server started successfully.".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="755">Modify 'ChatServer.btnStart_Click(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.String.Replace(System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="745">'ChatServer.btnStart_Click(object, EventArgs)' calls 'string.Replace(string, string)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="745">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnStart_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="746">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnStart_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="747">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.btnStart_Click(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="757">Change 'ChatServer.btnStart_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnStop_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="772">Method 'ChatServer.btnStop_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Server stopped successfully.".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="774">Modify 'ChatServer.btnStop_Click(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="776">Change 'ChatServer.btnStop_Click(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Calculate(System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="year-1" TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="264">Correct the potential overflow in the operation 'year-1' in 'ChatServer.Calculate(int, int)'.</Issue>
            </Message>
            <Message Id="noofdaysinpreviousmonth" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="277">'ChatServer.Calculate(int, int)' declares a variable, 'noofdaysinpreviousmonth', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="noofdaysleft" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="256">'ChatServer.Calculate(int, int)' declares a variable, 'noofdaysleft', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChatServer_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="820">Method 'ChatServer.ChatServer_Load(object, EventArgs)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string)'. Retrieve the following string(s) from a resource table instead: "Daily Routine server started successfully.".</Issue>
            </Message>
            <Message Id="System.String.Replace(System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="809">'ChatServer.ChatServer_Load(object, EventArgs)' calls 'string.Replace(string, string)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="809">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ChatServer_Load(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="810">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ChatServer_Load(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="811">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ChatServer_Load(object, EventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="820">Change 'ChatServer.ChatServer_Load(object, EventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cmbMonth_SelectedIndexChanged_1(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="233">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.cmbMonth_SelectedIndexChanged_1(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="233">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.cmbMonth_SelectedIndexChanged_1(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#cmbYear_SelectedIndexChanged_1(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="239">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.cmbYear_SelectedIndexChanged_1(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="239">Because the behavior of 'Convert.ToInt32(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.cmbYear_SelectedIndexChanged_1(object, EventArgs)' with a call to 'Convert.ToInt32(object, IFormatProvider)'. If the result of 'Convert.ToInt32(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="host" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="16">'ChatServer' contains field 'ChatServer.host' that is of IDisposable type: 'ServiceHost'. Change the Dispose method on 'ChatServer' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#gvCalendar_CellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="730">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.gvCalendar_CellClick(object, DataGridViewCellEventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#gvCalendar_CellDoubleClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="707">In method 'ChatServer.gvCalendar_CellDoubleClick(object, DataGridViewCellEventArgs)', call System.IDisposable.Dispose on object 'frm' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="710">Modify 'ChatServer.gvCalendar_CellDoubleClick(object, DataGridViewCellEventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.String.Replace(System.String,System.String)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="StringCreation" Certainty="95" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="693">'ChatServer.gvCalendar_CellDoubleClick(object, DataGridViewCellEventArgs)' calls 'string.Replace(string, string)' but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Issue>
            </Message>
            <Message Id="Address" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="662">'ChatServer.gvCalendar_CellDoubleClick(object, DataGridViewCellEventArgs)' declares a variable, 'Address', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="Message" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="703">'ChatServer.gvCalendar_CellDoubleClick(object, DataGridViewCellEventArgs)' declares a variable, 'Message', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="705">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.gvCalendar_CellDoubleClick(object, DataGridViewCellEventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="693">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.gvCalendar_CellDoubleClick(object, DataGridViewCellEventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="694">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.gvCalendar_CellDoubleClick(object, DataGridViewCellEventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="695">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.gvCalendar_CellDoubleClick(object, DataGridViewCellEventArgs)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="712">Change 'ChatServer.gvCalendar_CellDoubleClick(object, DataGridViewCellEventArgs)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#gvCalendar_CellEnter(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="735">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.gvCalendar_CellEnter(object, DataGridViewCellEventArgs)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HighLightTodaysDate()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="New_Month_value" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="96">'ChatServer.HighLightTodaysDate()' declares a variable, 'New_Month_value', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="New_year_value" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="97">'ChatServer.HighLightTodaysDate()' declares a variable, 'New_year_value', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="value" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="141">'ChatServer.HighLightTodaysDate()' declares a variable, 'value', of type 'DataGridViewCell', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt16(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="123">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.HighLightTodaysDate()' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="123">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.HighLightTodaysDate()' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="124">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.HighLightTodaysDate()' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="124">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.HighLightTodaysDate()' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="124">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.HighLightTodaysDate()' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="125">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.HighLightTodaysDate()' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.DateTime)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="102">Because the behavior of 'Convert.ToString(DateTime)' could vary based on the current user's locale settings, replace this call in 'ChatServer.HighLightTodaysDate()' with a call to 'Convert.ToString(DateTime, IFormatProvider)'. If the result of 'Convert.ToString(DateTime, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="152">Because the behavior of 'Convert.ToString(DateTime)' could vary based on the current user's locale settings, replace this call in 'ChatServer.HighLightTodaysDate()' with a call to 'Convert.ToString(DateTime, IFormatProvider)'. If the result of 'Convert.ToString(DateTime, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int16)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="125">Because the behavior of 'Convert.ToString(short)' could vary based on the current user's locale settings, replace this call in 'ChatServer.HighLightTodaysDate()' with a call to 'Convert.ToString(short, IFormatProvider)'. If the result of 'Convert.ToString(short, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int32)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="124">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'ChatServer.HighLightTodaysDate()' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="112">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.HighLightTodaysDate()' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="130">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.HighLightTodaysDate()' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="131">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.HighLightTodaysDate()' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="102">Because the behavior of 'Convert.ToString(string)' could vary based on the current user's locale settings, replace this call in 'ChatServer.HighLightTodaysDate()' with a call to 'Convert.ToString(string, IFormatProvider)'. If the result of 'Convert.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="64">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Start server".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="74">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&amp;Stop server".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="228">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&lt;".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="248">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "&gt;".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="280">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "ChatServer".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="143">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Chintan".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="159">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Leave Legends".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="189">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Loukik".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="169">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Mohit".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="209">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Nilesh".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="179">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Reshma".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="199">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Rupali".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="88">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Server Operations".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.NotifyIcon.set_BalloonTipText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="258">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'NotifyIcon.BalloonTipText.set(string)'. Retrieve the following string(s) from a resource table instead: "You have a notification from the application".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.NotifyIcon.set_BalloonTipTitle(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="259">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'NotifyIcon.BalloonTipTitle.set(string)'. Retrieve the following string(s) from a resource table instead: "DailyRoutine Message".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.NotifyIcon.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="261">Method 'ChatServer.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'NotifyIcon.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "DailyRoutine Message".</Issue>
            </Message>
            <Message Id="ChatServer" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="280">Correct the spelling of the unrecognized token 'ChatServer' in the literal '"ChatServer"'.</Issue>
            </Message>
            <Message Id="Chintan" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="143">Correct the spelling of the unrecognized token 'Chintan' in the literal '"Chintan"'.</Issue>
            </Message>
            <Message Id="DailyRoutine" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="259">Correct the spelling of the unrecognized token 'DailyRoutine' in the literal '"DailyRoutine Message"'.</Issue>
             <Issue Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="261">Correct the spelling of the unrecognized token 'DailyRoutine' in the literal '"DailyRoutine Message"'.</Issue>
            </Message>
            <Message Id="Loukik" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="189">Correct the spelling of the unrecognized token 'Loukik' in the literal '"Loukik"'.</Issue>
            </Message>
            <Message Id="Mohit" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="169">Correct the spelling of the unrecognized token 'Mohit' in the literal '"Mohit"'.</Issue>
            </Message>
            <Message Id="Nilesh" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="209">Correct the spelling of the unrecognized token 'Nilesh' in the literal '"Nilesh"'.</Issue>
            </Message>
            <Message Id="Reshma" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="179">Correct the spelling of the unrecognized token 'Reshma' in the literal '"Reshma"'.</Issue>
            </Message>
            <Message Id="Rupali" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.Designer.cs" Line="199">Correct the spelling of the unrecognized token 'Rupali' in the literal '"Rupali"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadMonth()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="165">In method 'ChatServer.LoadMonth()', object 'dt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="165">Be sure to set the DataTable Locale property wherever 'ChatServer.LoadMonth()' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="190">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ChatServer.LoadMonth()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadYear()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="207">In method 'ChatServer.LoadYear()', object 'dt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="207">Be sure to set the DataTable Locale property wherever 'ChatServer.LoadYear()' creates an instance of that type.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="215">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ChatServer.LoadYear()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="216">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'ChatServer.LoadYear()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadDatesFromExcel(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="409">'ChatServer.ReadDatesFromExcel(string, string, string)' has a cyclomatic complexity of 32. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="423">In method 'ChatServer.ReadDatesFromExcel(string, string, string)', object 'cmdExcel' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'cmdExcel' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="422">In method 'ChatServer.ReadDatesFromExcel(string, string, string)', object 'connExcel' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'connExcel' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="424">In method 'ChatServer.ReadDatesFromExcel(string, string, string)', object 'oda' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'oda' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="534">Object 'connExcel' can be disposed more than once in method 'ChatServer.ReadDatesFromExcel(string, string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 534</Issue>
            </Message>
            <Message Id="value" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="487">'ChatServer.ReadDatesFromExcel(string, string, string)' declares a variable, 'value', of type 'DataGridViewCell', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="437">The query string passed to 'OleDbCommand.CommandText.set(string)' in 'ChatServer.ReadDatesFromExcel(string, string, string)' could contain the following variables 'dtExcelSchema.Rows[0]["TABLE_NAME"]'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="filePath" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="409">Parameter 'filePath' of 'ChatServer.ReadDatesFromExcel(string, string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt16(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="458">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ReadDatesFromExcel(string, string, string)' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="465">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ReadDatesFromExcel(string, string, string)' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="465">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ReadDatesFromExcel(string, string, string)' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="466">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ReadDatesFromExcel(string, string, string)' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="466">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ReadDatesFromExcel(string, string, string)' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="466">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ReadDatesFromExcel(string, string, string)' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="467">Because the behavior of 'Convert.ToInt16(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ReadDatesFromExcel(string, string, string)' with a call to 'Convert.ToInt16(object, IFormatProvider)'. If the result of 'Convert.ToInt16(object, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int16)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="467">Because the behavior of 'Convert.ToString(short)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ReadDatesFromExcel(string, string, string)' with a call to 'Convert.ToString(short, IFormatProvider)'. If the result of 'Convert.ToString(short, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Int32)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="465">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ReadDatesFromExcel(string, string, string)' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="466">Because the behavior of 'Convert.ToString(int)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ReadDatesFromExcel(string, string, string)' with a call to 'Convert.ToString(int, IFormatProvider)'. If the result of 'Convert.ToString(int, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="454">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ReadDatesFromExcel(string, string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="473">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ReadDatesFromExcel(string, string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="474">Because the behavior of 'Convert.ToString(object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ReadDatesFromExcel(string, string, string)' with a call to 'Convert.ToString(object, IFormatProvider)'. If the result of 'Convert.ToString(object, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="e:\Calendar application v2.0\chat-server" File="ChatServer.cs" Line="421">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'ChatServer.ReadDatesFromExcel(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Selectedcellvalue" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ChatServer.Selectedcellvalue' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#userName" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2017-05-22 21:07:42Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'ChatServer.userName' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506">
   <Name>Avoid excessive class coupling</Name>
   <Description>Types and methods with a high degree of class coupling can be difficult to maintain.</Description>
   <Resolution Name="UIType">{0} is coupled with {1} different (non-IComponent) types from {2} different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb397994.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213">
   <Name>Disposable fields should be disposed</Name>
   <Description>If a type that implements IDisposable owns fields that also implement IDisposable, the encapsulating type's Dispose() implementation should call Dispose() on each disposable field.</Description>
   <Resolution Name="Default">{0} contains field {1} that is of IDisposable type: {2}. Change the Dispose method on {0} to call Dispose or Close on this field.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182328.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 534</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="StringCreation">{0} calls {1} but does not use the new string instance that the method returns. Pass the instance as an argument to another method, assign the instance to a variable, or remove the call if it is unnecessary.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182273.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="OperationsShouldNotOverflow" Category="Microsoft.Usage" CheckId="CA2233">
   <Name>Operations should not overflow</Name>
   <Description>Arithmetic operations should not be done without first validating the operands to prevent overflow.</Description>
   <Resolution Name="Default">Correct the potential overflow in the operation '{0}' in {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182354.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100">
   <Name>Review SQL queries for security vulnerabilities</Name>
   <Description>A SQL command string built from user input is vulnerable to SQL injection attacks. Microsoft SQL Server and other database servers support stored procedures and parameterized SQL queries, which reduce the risk of injection attacks.</Description>
   <Resolution Name="WithNonLiterals">The query string passed to {0} in {1} could contain the following variables {2}. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SetLocaleForDataTypes" Category="Microsoft.Globalization" CheckId="CA1306">
   <Name>Set locale for data types</Name>
   <Description>In most cases, Locale should be explicitly set to CultureInfo.InvariantCulture on DataSet and DataTable instances. Upon creation of a DataSet or DataTable instance, the Locale is set to the current culture. In most cases, the Locale should be set to CultureInfo.InvariantCulture to guarantee proper sorting behavior in all cultures.</Description>
   <Resolution Name="Default">Be sure to set the {0} Locale property wherever {1} creates an instance of that type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182188.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300">
   <Name>Specify MessageBoxOptions</Name>
   <Description>In order to run correctly on right-to-left systems, all calls to MessageBox.Show should use the overload that specifies MessageBoxOptions as an argument. Programs should detect whether they are running on a right-to-left system at run-time and pass the appropriate MessageBoxOptions value in order to display correctly.</Description>
   <Resolution Name="Default">Change {0} to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182191.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="12.0.0.0" />
  </Rule>
  <Rule TypeName="TypeNamesShouldNotMatchNamespaces" Category="Microsoft.Naming" CheckId="CA1724">
   <Name>Type names should not match namespaces</Name>
   <Description>Identifiers which conflict in whole or in part with namespace names should be avoided. Names that describe the purpose or contents of a type are preferred.</Description>
   <Resolution Name="Default">The type name {0} conflicts in whole or in part with the namespace name '{1}'. Change either name to eliminate the conflict.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182257.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="12.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
